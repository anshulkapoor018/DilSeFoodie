{"ast":null,"code":"import _classCallCheck from\"/Users/arun/Documents/Capstone/Capstone-Studio-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/arun/Documents/Capstone/Capstone-Studio-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/arun/Documents/Capstone/Capstone-Studio-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/arun/Documents/Capstone/Capstone-Studio-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';// import GoogleMapReact from 'google-map-react'\n// import { Icon } from '@iconify/react'\n// import locationIcon from '@iconify/icons-mdi/map-marker'\n// import './index.css'\n// const LocationPin = ({ text }) => (\n//   <div className=\"pin\">\n//     <Icon icon={locationIcon} className=\"pin-icon\" />\n//     <p className=\"pin-text\">{text}</p>\n//   </div>\n// )\n// const Map = ({ location, zoomLevel }) => (\n//   <div className=\"map\">\n//     <div className=\"google-map\">\n//       <GoogleMapReact\n//         bootstrapURLKeys={{ key: 'AIzaSyCNH22LdcxJ44LkKEG07o2nSXdNZtAiISQ' }}\n//         center={location[0]}\n//         defaultZoom={zoomLevel}\n//       >\n//         { location.map((item, index) => (\n//           <LocationPin key = {index} lat={item.latitude} lng={item.longitude} text={item.name} />\n//         ))}\n//       </GoogleMapReact>\n//     </div>\n//   </div>\n// )\n// export default Map;\nimport{Map,InfoWindow,Marker,GoogleApiWrapper}from'google-maps-react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MapContainer=/*#__PURE__*/function(_React$Component){_inherits(MapContainer,_React$Component);var _super=_createSuper(MapContainer);function MapContainer(){var _this;_classCallCheck(this,MapContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={activeMarker:{},selectedPlace:{},showingInfoWindow:false,restList:[]};_this.onMarkerClick=function(props,marker){return _this.setState({activeMarker:marker,selectedPlace:props,showingInfoWindow:true});};_this.onInfoWindowClose=function(){return _this.setState({activeMarker:null,showingInfoWindow:false});};_this.onMapClicked=function(){if(_this.state.showingInfoWindow)_this.setState({activeMarker:null,showingInfoWindow:false});};return _this;}_createClass(MapContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.restauranListApiCall();}},{key:\"restauranListApiCall\",value:function restauranListApiCall(){var self=this;axios.get('http://localhost:5000/restaurant/all').then(function(response){console.log(response.data);self.setState({restList:response.data});});}},{key:\"render\",value:function render(){var _this2=this;console.log(this.state.restList);var coords={lat:40.7337675,lng:-74.0680271};if(!this.props.loaded)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return/*#__PURE__*/_jsxs(Map,{className:\"map\",google:this.props.google,onClick:this.onMapClicked,style:{height:'100%',position:'relative',width:'100%'},initialCenter:coords,zoom:14,children:[this.state.restList.map(function(item,index){return/*#__PURE__*/_jsx(Marker,{name:item.name,onClick:_this2.onMarkerClick,position:{lat:item.latitude,lng:item.longitude}},index);}),/*#__PURE__*/_jsx(InfoWindow,{marker:this.state.activeMarker,onClose:this.onInfoWindowClose,visible:this.state.showingInfoWindow,children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{children:this.state.selectedPlace.name})})})]});}}]);return MapContainer;}(React.Component);export default GoogleApiWrapper({apiKey:'AIzaSyCNH22LdcxJ44LkKEG07o2nSXdNZtAiISQ'})(MapContainer);","map":{"version":3,"sources":["/Users/arun/Documents/Capstone/Capstone-Studio-Project/src/Static/GoogleMapsPickup/index.js"],"names":["React","axios","Map","InfoWindow","Marker","GoogleApiWrapper","MapContainer","state","activeMarker","selectedPlace","showingInfoWindow","restList","onMarkerClick","props","marker","setState","onInfoWindowClose","onMapClicked","restauranListApiCall","self","get","then","response","console","log","data","coords","lat","lng","loaded","google","height","position","width","map","item","index","name","latitude","longitude","Component","apiKey"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios';\n\n// import GoogleMapReact from 'google-map-react'\n// import { Icon } from '@iconify/react'\n// import locationIcon from '@iconify/icons-mdi/map-marker'\n\n// import './index.css'\n\n// const LocationPin = ({ text }) => (\n//   <div className=\"pin\">\n//     <Icon icon={locationIcon} className=\"pin-icon\" />\n//     <p className=\"pin-text\">{text}</p>\n//   </div>\n// )\n\n// const Map = ({ location, zoomLevel }) => (\n//   <div className=\"map\">\n//     <div className=\"google-map\">\n//       <GoogleMapReact\n//         bootstrapURLKeys={{ key: 'AIzaSyCNH22LdcxJ44LkKEG07o2nSXdNZtAiISQ' }}\n//         center={location[0]}\n//         defaultZoom={zoomLevel}\n//       >\n//         { location.map((item, index) => (\n//           <LocationPin key = {index} lat={item.latitude} lng={item.longitude} text={item.name} />\n//         ))}\n//       </GoogleMapReact>\n//     </div>\n//   </div>\n// )\n\n// export default Map;\n\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\nclass MapContainer extends React.Component {\n  state = {\n    activeMarker: {},\n    selectedPlace: {},\n    showingInfoWindow: false,\n    restList : []\n  };\n\n  componentDidMount(){\n    this.restauranListApiCall();\n    \n  }\n\n  restauranListApiCall() {\n    var self = this;\n    axios.get('http://localhost:5000/restaurant/all')\n    .then(function (response) {\n      console.log(response.data);\n      self.setState({ restList: response.data });\n    })\n  }\n\n  onMarkerClick = (props, marker) =>\n    this.setState({\n      activeMarker: marker,\n      selectedPlace: props,\n      showingInfoWindow: true\n    });\n\n  onInfoWindowClose = () =>\n    this.setState({\n      activeMarker: null,\n      showingInfoWindow: false\n    });\n\n  onMapClicked = () => {\n    if (this.state.showingInfoWindow)\n      this.setState({\n        activeMarker: null,\n        showingInfoWindow: false\n      });\n  };\n\n  render() {\n    console.log(this.state.restList);\n    const coords = { lat: 40.7337675, lng: -74.0680271 };\n    if (!this.props.loaded) return <div>Loading...</div>;\n    return (\n      <Map\n        className=\"map\"\n        google={this.props.google}\n        onClick={this.onMapClicked}\n        style={{ height: '100%', position: 'relative', width: '100%' }}\n        initialCenter = { coords }\n        zoom={14}>\n        {this.state.restList.map((item, index) => (\n          <Marker\n          key = {index}\n          name={item.name}\n          onClick={this.onMarkerClick}\n          position={{ lat: item.latitude, lng: item.longitude }}\n        />\n        ))}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          onClose={this.onInfoWindowClose}\n          visible={this.state.showingInfoWindow}>\n          <div>\n            <h1>{this.state.selectedPlace.name}</h1>\n          </div>\n        </InfoWindow>\n\n        {/* <InfoWindow position={{ lat: 37.765703, lng: -122.42564 }} visible>\n          <small>\n            Click on any of the markers to display an additional info.\n          </small>\n        </InfoWindow> */}\n      </Map>\n    );\n  }\n}\n \nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyCNH22LdcxJ44LkKEG07o2nSXdNZtAiISQ')\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}