{"ast":null,"code":"var _jsxFileName = \"/Users/arun/Documents/Capstone/Capstone-Studio-Project/src/Static/GoogleMapsPickup/index.js\";\nimport React from 'react';\nimport axios from 'axios'; // import GoogleMapReact from 'google-map-react'\n// import { Icon } from '@iconify/react'\n// import locationIcon from '@iconify/icons-mdi/map-marker'\n// import './index.css'\n// const LocationPin = ({ text }) => (\n//   <div className=\"pin\">\n//     <Icon icon={locationIcon} className=\"pin-icon\" />\n//     <p className=\"pin-text\">{text}</p>\n//   </div>\n// )\n// const Map = ({ location, zoomLevel }) => (\n//   <div className=\"map\">\n//     <div className=\"google-map\">\n//       <GoogleMapReact\n//         bootstrapURLKeys={{ key: 'AIzaSyCNH22LdcxJ44LkKEG07o2nSXdNZtAiISQ' }}\n//         center={location[0]}\n//         defaultZoom={zoomLevel}\n//       >\n//         { location.map((item, index) => (\n//           <LocationPin key = {index} lat={item.latitude} lng={item.longitude} text={item.name} />\n//         ))}\n//       </GoogleMapReact>\n//     </div>\n//   </div>\n// )\n// export default Map;\n\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MapContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeMarker: {},\n      selectedPlace: {},\n      showingInfoWindow: false,\n      restList: []\n    };\n\n    this.onMarkerClick = (props, marker) => this.setState({\n      activeMarker: marker,\n      selectedPlace: props,\n      showingInfoWindow: true\n    });\n\n    this.onInfoWindowClose = () => this.setState({\n      activeMarker: null,\n      showingInfoWindow: false\n    });\n\n    this.onMapClicked = () => {\n      if (this.state.showingInfoWindow) this.setState({\n        activeMarker: null,\n        showingInfoWindow: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.restauranListApiCall();\n  }\n\n  restauranListApiCall() {\n    var self = this;\n    axios.get('http://localhost:5000/restaurant/all').then(function (response) {\n      console.log(response.data);\n      self.setState({\n        restList: response.data\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.restList);\n    const coords = {\n      lat: 40.7337675,\n      lng: -74.0680271\n    };\n    if (!this.props.loaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 36\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Map, {\n      className: \"map\",\n      google: this.props.google,\n      onClick: this.onMapClicked,\n      style: {\n        height: '100%',\n        position: 'relative',\n        width: '100%'\n      },\n      initialCenter: coords,\n      zoom: 14,\n      children: [this.state.restList.map((item, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        name: item.name,\n        onClick: this.onMarkerClick,\n        position: {\n          lat: item.latitude,\n          lng: item.longitude\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(InfoWindow, {\n        marker: this.state.activeMarker,\n        onClose: this.onInfoWindowClose,\n        visible: this.state.showingInfoWindow,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: this.state.selectedPlace.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCNH22LdcxJ44LkKEG07o2nSXdNZtAiISQ'\n})(MapContainer);","map":{"version":3,"sources":["/Users/arun/Documents/Capstone/Capstone-Studio-Project/src/Static/GoogleMapsPickup/index.js"],"names":["React","axios","Map","InfoWindow","Marker","GoogleApiWrapper","MapContainer","Component","state","activeMarker","selectedPlace","showingInfoWindow","restList","onMarkerClick","props","marker","setState","onInfoWindowClose","onMapClicked","componentDidMount","restauranListApiCall","self","get","then","response","console","log","data","render","coords","lat","lng","loaded","google","height","position","width","map","item","index","name","latitude","longitude","apiKey"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios';\n\n// import GoogleMapReact from 'google-map-react'\n// import { Icon } from '@iconify/react'\n// import locationIcon from '@iconify/icons-mdi/map-marker'\n\n// import './index.css'\n\n// const LocationPin = ({ text }) => (\n//   <div className=\"pin\">\n//     <Icon icon={locationIcon} className=\"pin-icon\" />\n//     <p className=\"pin-text\">{text}</p>\n//   </div>\n// )\n\n// const Map = ({ location, zoomLevel }) => (\n//   <div className=\"map\">\n//     <div className=\"google-map\">\n//       <GoogleMapReact\n//         bootstrapURLKeys={{ key: 'AIzaSyCNH22LdcxJ44LkKEG07o2nSXdNZtAiISQ' }}\n//         center={location[0]}\n//         defaultZoom={zoomLevel}\n//       >\n//         { location.map((item, index) => (\n//           <LocationPin key = {index} lat={item.latitude} lng={item.longitude} text={item.name} />\n//         ))}\n//       </GoogleMapReact>\n//     </div>\n//   </div>\n// )\n\n// export default Map;\n\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\nclass MapContainer extends React.Component {\n  state = {\n    activeMarker: {},\n    selectedPlace: {},\n    showingInfoWindow: false,\n    restList : []\n  };\n\n  componentDidMount(){\n    this.restauranListApiCall();\n    \n  }\n\n  restauranListApiCall() {\n    var self = this;\n    axios.get('http://localhost:5000/restaurant/all')\n    .then(function (response) {\n      console.log(response.data);\n      self.setState({ restList: response.data });\n    })\n  }\n\n  onMarkerClick = (props, marker) =>\n    this.setState({\n      activeMarker: marker,\n      selectedPlace: props,\n      showingInfoWindow: true\n    });\n\n  onInfoWindowClose = () =>\n    this.setState({\n      activeMarker: null,\n      showingInfoWindow: false\n    });\n\n  onMapClicked = () => {\n    if (this.state.showingInfoWindow)\n      this.setState({\n        activeMarker: null,\n        showingInfoWindow: false\n      });\n  };\n\n  render() {\n    console.log(this.state.restList);\n    const coords = { lat: 40.7337675, lng: -74.0680271 };\n    if (!this.props.loaded) return <div>Loading...</div>;\n    return (\n      <Map\n        className=\"map\"\n        google={this.props.google}\n        onClick={this.onMapClicked}\n        style={{ height: '100%', position: 'relative', width: '100%' }}\n        initialCenter = { coords }\n        zoom={14}>\n        {this.state.restList.map((item, index) => (\n          <Marker\n          key = {index}\n          name={item.name}\n          onClick={this.onMarkerClick}\n          position={{ lat: item.latitude, lng: item.longitude }}\n        />\n        ))}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          onClose={this.onInfoWindowClose}\n          visible={this.state.showingInfoWindow}>\n          <div>\n            <h1>{this.state.selectedPlace.name}</h1>\n          </div>\n        </InfoWindow>\n\n        {/* <InfoWindow position={{ lat: 37.765703, lng: -122.42564 }} visible>\n          <small>\n            Click on any of the markers to display an additional info.\n          </small>\n        </InfoWindow> */}\n      </Map>\n    );\n  }\n}\n \nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyCNH22LdcxJ44LkKEG07o2nSXdNZtAiISQ')\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}